"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
const DEFAULT_CACHE_TTL = 5 * 1000;

class InMemoryCache {
  constructor({
    ttl = DEFAULT_CACHE_TTL
  }) {
    this.ttl = ttl;
    this.cache = Object.create(null);
  }

  get(key) {
    const record = this.cache[key];
    if (record == null) {
      return null;
    }

    // Has Record and isnt expired
    if (isNaN(record.expire) || record.expire >= Date.now()) {
      return record.value;
    }

    // Record has expired
    delete this.cache[key];
    return null;
  }

  put(key, value, ttl = this.ttl) {
    if (ttl < 0 || isNaN(ttl)) {
      ttl = NaN;
    }

    var record = {
      value: value,
      expire: ttl + Date.now()
    };

    if (!isNaN(record.expire)) {
      record.timeout = setTimeout(() => {
        this.del(key);
      }, ttl);
    }

    this.cache[key] = record;
  }

  del(key) {
    var record = this.cache[key];
    if (record == null) {
      return;
    }

    if (record.timeout) {
      clearTimeout(record.timeout);
    }
    delete this.cache[key];
  }

  clear() {
    this.cache = Object.create(null);
  }

}

exports.InMemoryCache = InMemoryCache;
exports.default = InMemoryCache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9BZGFwdGVycy9DYWNoZS9Jbk1lbW9yeUNhY2hlLmpzIl0sIm5hbWVzIjpbIkRFRkFVTFRfQ0FDSEVfVFRMIiwiSW5NZW1vcnlDYWNoZSIsImNvbnN0cnVjdG9yIiwidHRsIiwiY2FjaGUiLCJPYmplY3QiLCJjcmVhdGUiLCJnZXQiLCJrZXkiLCJyZWNvcmQiLCJpc05hTiIsImV4cGlyZSIsIkRhdGUiLCJub3ciLCJ2YWx1ZSIsInB1dCIsIk5hTiIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZGVsIiwiY2xlYXJUaW1lb3V0IiwiY2xlYXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsb0JBQW9CLElBQUksSUFBOUI7O0FBR08sTUFBTUMsYUFBTixDQUFvQjtBQUN6QkMsY0FBWTtBQUNWQyxVQUFNSDtBQURJLEdBQVosRUFFRztBQUNELFNBQUtHLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLEtBQUwsR0FBYUMsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBYjtBQUNEOztBQUVEQyxNQUFJQyxHQUFKLEVBQVM7QUFDUCxVQUFNQyxTQUFTLEtBQUtMLEtBQUwsQ0FBV0ksR0FBWCxDQUFmO0FBQ0EsUUFBSUMsVUFBVSxJQUFkLEVBQW9CO0FBQ2xCLGFBQU8sSUFBUDtBQUNEOztBQUVEO0FBQ0EsUUFBSUMsTUFBTUQsT0FBT0UsTUFBYixLQUF3QkYsT0FBT0UsTUFBUCxJQUFpQkMsS0FBS0MsR0FBTCxFQUE3QyxFQUF5RDtBQUN2RCxhQUFPSixPQUFPSyxLQUFkO0FBQ0Q7O0FBRUQ7QUFDQSxXQUFPLEtBQUtWLEtBQUwsQ0FBV0ksR0FBWCxDQUFQO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBRURPLE1BQUlQLEdBQUosRUFBU00sS0FBVCxFQUFnQlgsTUFBTSxLQUFLQSxHQUEzQixFQUFnQztBQUM5QixRQUFJQSxNQUFNLENBQU4sSUFBV08sTUFBTVAsR0FBTixDQUFmLEVBQTJCO0FBQ3pCQSxZQUFNYSxHQUFOO0FBQ0Q7O0FBRUQsUUFBSVAsU0FBUztBQUNYSyxhQUFPQSxLQURJO0FBRVhILGNBQVFSLE1BQU1TLEtBQUtDLEdBQUw7QUFGSCxLQUFiOztBQUtBLFFBQUksQ0FBQ0gsTUFBTUQsT0FBT0UsTUFBYixDQUFMLEVBQTJCO0FBQ3pCRixhQUFPUSxPQUFQLEdBQWlCQyxXQUFXLE1BQU07QUFDaEMsYUFBS0MsR0FBTCxDQUFTWCxHQUFUO0FBQ0QsT0FGZ0IsRUFFZEwsR0FGYyxDQUFqQjtBQUdEOztBQUVELFNBQUtDLEtBQUwsQ0FBV0ksR0FBWCxJQUFrQkMsTUFBbEI7QUFDRDs7QUFFRFUsTUFBSVgsR0FBSixFQUFTO0FBQ1AsUUFBSUMsU0FBUyxLQUFLTCxLQUFMLENBQVdJLEdBQVgsQ0FBYjtBQUNBLFFBQUlDLFVBQVUsSUFBZCxFQUFvQjtBQUNsQjtBQUNEOztBQUVELFFBQUlBLE9BQU9RLE9BQVgsRUFBb0I7QUFDbEJHLG1CQUFhWCxPQUFPUSxPQUFwQjtBQUNEO0FBQ0QsV0FBTyxLQUFLYixLQUFMLENBQVdJLEdBQVgsQ0FBUDtBQUNEOztBQUVEYSxVQUFRO0FBQ04sU0FBS2pCLEtBQUwsR0FBYUMsT0FBT0MsTUFBUCxDQUFjLElBQWQsQ0FBYjtBQUNEOztBQXpEd0I7O1FBQWRMLGEsR0FBQUEsYTtrQkE2REVBLGEiLCJmaWxlIjoiSW5NZW1vcnlDYWNoZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERFRkFVTFRfQ0FDSEVfVFRMID0gNSAqIDEwMDA7XG5cblxuZXhwb3J0IGNsYXNzIEluTWVtb3J5Q2FjaGUge1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgdHRsID0gREVGQVVMVF9DQUNIRV9UVExcbiAgfSkge1xuICAgIHRoaXMudHRsID0gdHRsO1xuICAgIHRoaXMuY2FjaGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICB9XG5cbiAgZ2V0KGtleSkge1xuICAgIGNvbnN0IHJlY29yZCA9IHRoaXMuY2FjaGVba2V5XTtcbiAgICBpZiAocmVjb3JkID09IG51bGwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8vIEhhcyBSZWNvcmQgYW5kIGlzbnQgZXhwaXJlZFxuICAgIGlmIChpc05hTihyZWNvcmQuZXhwaXJlKSB8fCByZWNvcmQuZXhwaXJlID49IERhdGUubm93KCkpIHtcbiAgICAgIHJldHVybiByZWNvcmQudmFsdWU7XG4gICAgfVxuXG4gICAgLy8gUmVjb3JkIGhhcyBleHBpcmVkXG4gICAgZGVsZXRlIHRoaXMuY2FjaGVba2V5XTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHB1dChrZXksIHZhbHVlLCB0dGwgPSB0aGlzLnR0bCkge1xuICAgIGlmICh0dGwgPCAwIHx8IGlzTmFOKHR0bCkpIHtcbiAgICAgIHR0bCA9IE5hTjtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0ge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZXhwaXJlOiB0dGwgKyBEYXRlLm5vdygpXG4gICAgfVxuXG4gICAgaWYgKCFpc05hTihyZWNvcmQuZXhwaXJlKSkge1xuICAgICAgcmVjb3JkLnRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5kZWwoa2V5KTtcbiAgICAgIH0sIHR0bCk7XG4gICAgfVxuXG4gICAgdGhpcy5jYWNoZVtrZXldID0gcmVjb3JkO1xuICB9XG5cbiAgZGVsKGtleSkge1xuICAgIHZhciByZWNvcmQgPSB0aGlzLmNhY2hlW2tleV07XG4gICAgaWYgKHJlY29yZCA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHJlY29yZC50aW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQocmVjb3JkLnRpbWVvdXQpO1xuICAgIH1cbiAgICBkZWxldGUgdGhpcy5jYWNoZVtrZXldO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5jYWNoZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBJbk1lbW9yeUNhY2hlO1xuIl19